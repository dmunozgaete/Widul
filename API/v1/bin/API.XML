<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.WebApiConfig">
            <summary>
            WEB API Global Configuration
            </summary>
        </member>
        <member name="M:API.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register Config Variables
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:API.Endpoints.Events.EventsController">
            <summary>
            Event Controller
            </summary>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.JoinEvent(System.String)">
            <summary>
            Join to a Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.LeftEvent(System.String)">
            <summary>
            Left a Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetEventsByTag(System.String)">
            <summary>
            Search all Events by a specific tag
            </summary>
            <param name="tag">Tag</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetEventsBySearch(System.String)">
            <summary>
            Search events by query
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetAllEvents">
            <summary>
            Get all Events
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetRecommendedEvents">
            <summary>
            Get Recommended Events
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetEvent(System.String)">
            <summary>
            Get Event information by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.CreateEvent">
            <summary>
            Create a new Event
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.EditEvent(System.String)">
            <summary>
            Edit Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.DeleteEvent(System.String)">
            <summary>
            Delete Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetEventTypes">
            <summary>
            Get Event Types
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Events.Services.EventTypes.Get">
            <summary>
            Get Events Types
            </summary>
        </member>
        <member name="T:API.Endpoints.SimpleAuthentication.Services.Authenticate">
            <summary>
            Simple Authentication Service
            </summary>
        </member>
        <member name="M:API.Endpoints.SimpleAuthentication.Services.Authenticate.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.SimpleAuthentication.SimpleAuthenticationController">
            <summary>
            SImple Authentication Example
            </summary>
        </member>
        <member name="M:API.Endpoints.SimpleAuthentication.SimpleAuthenticationController.SecretOperation">
            <summary>
            Restricted Operation (Authentication Required)
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.SimpleAuthentication.SimpleAuthenticationController.Post(API.Endpoints.SimpleAuthentication.Models.Authenitcation)">
            <summary>
            Get an Access Token for retrieve the "SuperSecretOperation"
            </summary>
            <param name="credentials">Any credentials</param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Users.UsersController">
            <summary>
            User Controller
            </summary>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetUser(System.String)">
            <summary>
            Get user information by its GUID
            </summary>
            <param name="id">User GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.CreateUser">
            <summary>
            Create a User
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.EditUser(System.String)">
            <summary>
            Edit a User by its GUID
            </summary>
            <param name="id">User GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.DeleteUser(System.String)">
            <summary>
            Delete a user by its GUID
            </summary>
            <param name="id">User GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.FollowUserById(System.Guid)">
            <summary>
            Follow a user by its GUID
            </summary>
            <param name="id">User GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.UnfollowUserById(System.Guid)">
            <summary>
            Unfollow a user by its GUID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetUserFollowing(System.Guid)">
            <summary>
            Get all the following users from this user
            </summary>
            <param name="id">User GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetUserFollers(System.Guid)">
            <summary>
            Get all the followers from this user
            </summary>
            <param name="id">User Identifier</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetActualUser">
            <summary>
            Get the current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetActualUserFollowing">
            <summary>
            Get the following users from current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetActualUserFollowers">
            <summary>
            Get the followers from current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Users.UsersController.GetCurrentUserNotifications">
            <summary>
            Get notifications from current user
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:API.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:API.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:API.Errors.COUNTRY_REQUIRED">
            <summary>
              Looks up a localized string similar to Country is required.
            </summary>
        </member>
        <member name="P:API.Errors.EMAIL_REQUIRED">
            <summary>
              Looks up a localized string similar to Email is required.
            </summary>
        </member>
        <member name="P:API.Errors.EMPTY_BODY">
            <summary>
              Looks up a localized string similar to Model is Empty.
            </summary>
        </member>
        <member name="P:API.Errors.PASSWORD_REQUIRED">
            <summary>
              Looks up a localized string similar to Password is required.
            </summary>
        </member>
        <member name="T:API.WebApiApplication">
            <summary>
            Web Api Bootstrap
            </summary>
        </member>
        <member name="M:API.WebApiApplication.Application_Start">
            <summary>
            Start up
            </summary>
        </member>
    </members>
</doc>

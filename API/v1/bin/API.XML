<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.WebApiConfig">
            <summary>
            WEB API Global Configuration
            </summary>
        </member>
        <member name="F:API.WebApiConfig.RootRoles">
            <summary>
            Root Roles
            </summary>
        </member>
        <member name="M:API.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register Config Variables
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:API.Endpoints.Accounts.AccountsController">
            <summary>
            Account API
            </summary>
        </member>
        <member name="M:API.Endpoints.Accounts.AccountsController.Get">
            <summary>
            Retrieve Account's
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Accounts.AccountsController.Get(System.String)">
            <summary>
            Retrieve Target Account Information
            </summary>
            <param name="id">Account Token</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Accounts.AccountsController.Current">
            <summary>
            Retrieve Current Account Information
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Accounts.Services.Get">
            <summary>
            Retrieve a Target User
            </summary>
        </member>
        <member name="M:API.Endpoints.Accounts.Services.Get.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:API.Endpoints.Accounts.Services.Get.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Accounts.Templates.Mail.Mail">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:API.Endpoints.Accounts.Templates.Mail.Mail.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:API.Endpoints.Accounts.Templates.Mail.Mail.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:API.Endpoints.Accounts.Templates.Mail.Mail.Recover_Subject">
            <summary>
              Busca una cadena traducida similar a Recuperación de Contraseña.
            </summary>
        </member>
        <member name="P:API.Endpoints.Accounts.Templates.Mail.Mail.Register_Subject">
            <summary>
              Busca una cadena traducida similar a Bienvenido a Widul!.
            </summary>
        </member>
        <member name="T:API.Endpoints.Events.EventsController">
            <summary>
            Event Controller
            </summary>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.Get">
            <summary>
            Get all Events
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.Get(System.Guid)">
            <summary>
            Get Event Details
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.Post(API.Endpoints.Events.Models.NewEvent)">
            <summary>
            Create a Event
            </summary>
            <param name="newEvent">Model</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.Tags">
            <summary>
            Get all Events
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.GetComments(System.String)">
            <summary>
            Get all comments from specific event
            </summary>
            <param name="id">Event guid</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.CreateComment(System.String,API.Endpoints.Events.Models.NewComment)">
            <summary>
            Create a comment
            </summary>
            <param name="id">Event guid</param>
            <param name="comment">comment</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.SearchEvent(System.String)">
            <summary>
            Search all Events by queries
            </summary>
            <param name="q">Query</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.JoinEvent(System.String)">
            <summary>
            Join to a Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Events.EventsController.LeftEvent(System.String)">
            <summary>
            Left a Event by its GUID
            </summary>
            <param name="id">Event GUID</param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Events.Services.Create">
            <summary>
            Create a new Event
            </summary>
        </member>
        <member name="M:API.Endpoints.Events.Services.Create.#ctor(System.String,API.Endpoints.Events.Models.NewEvent)">
            <summary>
            Constructor
            </summary>
            <param name="creator"></param>
            <param name="newEvent"></param>
        </member>
        <member name="M:API.Endpoints.Events.Services.Create.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Events.Services.Get">
            <summary>
            Get Event Details
            </summary>
        </member>
        <member name="T:API.Endpoints.Events.Services.Search">
            <summary>
            Search Event's by queries
            </summary>
        </member>
        <member name="M:API.Endpoints.Events.Services.Search.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:API.Endpoints.Events.Services.Search.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Files.FilesController">
            <summary>
            File API
            </summary>
        </member>
        <member name="M:API.Endpoints.Files.FilesController.Get(System.String)">
            <summary>
            Retrieves a File Content
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Files.FilesController.Post">
            <summary>
            Create a Temporary File  (Must be Change the flag to permanently after)
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Files.Services.Upload">
            <summary>
            File Upload
            </summary>
        </member>
        <member name="M:API.Endpoints.Files.Services.Upload.#ctor(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="request">Http Request</param>
            <param name="userID">User ID</param>
        </member>
        <member name="M:API.Endpoints.Files.Services.Upload.SaveFiles(System.Collections.Generic.List{System.Net.Http.HttpContent})">
            <summary>
            Save Files into DB
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Files.Services.View">
            <summary>
            Authentication API
            </summary>
        </member>
        <member name="M:API.Endpoints.Files.Services.View.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="token">Token del Archivo</param>
        </member>
        <member name="M:API.Endpoints.Files.Services.View.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Obtiene la foto del usuario
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Knowledge.Services.Create">
            <summary>
            Create a New Place
            </summary>
        </member>
        <member name="M:API.Endpoints.Knowledge.Services.Create.#ctor(System.String,API.Endpoints.Knowledge.Models.newKnowledge)">
            <summary>
            Constructor
            </summary>
            <param name="creator"></param>
            <param name="knowledge"></param>
        </member>
        <member name="M:API.Endpoints.Knowledge.Services.Create.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Places.PlacesController">
            <summary>
            Places Controller
            </summary>
        </member>
        <member name="M:API.Endpoints.Places.PlacesController.Get">
            <summary>
            Get all availables places
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Endpoints.Places.PlacesController.Post(API.Endpoints.Places.Models.NewPlace)">
            <summary>
            Add New Place
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Places.Services.Create">
            <summary>
            Create a New Place
            </summary>
        </member>
        <member name="M:API.Endpoints.Places.Services.Create.#ctor(System.String,API.Endpoints.Places.Models.NewPlace)">
            <summary>
            Constructor
            </summary>
            <param name="creator"></param>
            <param name="place"></param>
        </member>
        <member name="M:API.Endpoints.Places.Services.Create.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Security.Resources.Security">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:API.Endpoints.Security.Resources.Security.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:API.Endpoints.Security.Resources.Security.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:API.Endpoints.Security.Resources.Security.USERNAME_OR_PASSWORD_INCORRECT">
            <summary>
              Busca una cadena traducida similar a Usuario o Clave Incorrecta.
            </summary>
        </member>
        <member name="T:API.Endpoints.Security.SecurityController">
            <summary>
            Security Controller to grant JWT to Valid User's
            </summary>
        </member>
        <member name="M:API.Endpoints.Security.SecurityController.Authorize(API.Endpoints.Security.Models.FacebookCredentials)">
            <summary>
            Authorize via Facebook
            </summary>
            <param name="credentials">facebook data</param>
            <returns></returns>
            <response code="200">Authorized</response>
            <response code="500">Incorrect Access Token</response>
        </member>
        <member name="M:API.Endpoints.Security.SecurityController.Authorize(API.Endpoints.Security.Models.GoogleCredentials)">
            <summary>
            Authorize via Google
            </summary>
            <param name="credentials">facebook data</param>
            <returns></returns>
            <response code="200">Authorized</response>
            <response code="500">Incorrect Access Token</response>
        </member>
        <member name="T:API.Endpoints.Security.Services.Oauth.Facebook">
            <summary>
            Create or Authorize a Facebook User into the Application (Always Create a User Application)
            </summary>
        </member>
        <member name="M:API.Endpoints.Security.Services.Oauth.Facebook.#ctor(System.Net.Http.HttpRequestMessage,API.Endpoints.Security.Models.FacebookCredentials)">
            <summary>
            Constructor
            </summary>
            <param name="request"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:API.Endpoints.Security.Services.Oauth.Facebook.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Endpoints.Security.Services.Oauth.Google">
            <summary>
            Create or Authorize a Google User into the Application (Always Create a User Application)
            </summary>
        </member>
        <member name="M:API.Endpoints.Security.Services.Oauth.Google.#ctor(System.Net.Http.HttpRequestMessage,API.Endpoints.Security.Models.GoogleCredentials)">
            <summary>
            Constructor
            </summary>
            <param name="request"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:API.Endpoints.Security.Services.Oauth.Google.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Async Process
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:API.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:API.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:API.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:API.Errors.COUNTRY_REQUIRED">
            <summary>
              Looks up a localized string similar to Country is required.
            </summary>
        </member>
        <member name="P:API.Errors.EMAIL_REQUIRED">
            <summary>
              Looks up a localized string similar to Email is required.
            </summary>
        </member>
        <member name="P:API.Errors.EMPTY_BODY">
            <summary>
              Looks up a localized string similar to Model is Empty.
            </summary>
        </member>
        <member name="P:API.Errors.PASSWORD_REQUIRED">
            <summary>
              Looks up a localized string similar to Password is required.
            </summary>
        </member>
        <member name="T:API.WebApiApplication">
            <summary>
            Web Api Bootstrap
            </summary>
        </member>
        <member name="M:API.WebApiApplication.Application_Start">
            <summary>
            Start up
            </summary>
        </member>
    </members>
</doc>
